import { listDetails } from './interfaces/listDetails-interface';
import { channelDetails } from './interfaces/channelDetails-interface';
import { videoDetails } from "./interfaces/videoDetails-interface";
/**
 * @param {string} key The YouTube Data API v3 key to use
 */
export declare class Youtube {
    private API_KEY;
    private readonly CHANNELS_URL;
    private readonly PLAYLIST_URL;
    private readonly VIDEO_URL;
    constructor(API_KEY: string);
    /**
     * Get Channel Data or Test the API
     * @param {string} channelUrl The specific fetching Url with API_KEY
     * @returns {Promise<?contentDetails>}
     * @example
     */
    private getData;
    /**
     * Get Video List Max 50 per request
     * @param {string} channelUrl The specific fetching Url with API_KEY
     * @param {string} pageToken The code for a specific set of videos
     * @returns {Promise<?listDetails>}
     * @example
     */
    private getList;
    /**
     * Get Video List Max 50 per request
     * @param {Array} videos The array all the videos are appended to
     * @param {Array} listDetails The array of Video List, MAX=50
     * @returns {Promise<?Array>}
     * @example
     */
    getVideos(videos: [videoDetails], listDetails: listDetails): Promise<void>;
    /**
     * Get channel Details by ID
     * @param {string} channel_id The channel ID
     * @returns {Promise<?channelDetails>}
     * @example
     */
    channelDetails(channel_id: string): Promise<channelDetails>;
    /**
     * Get Channel videos By channel Uploads ID
     * @param {string} uploads_id The channel Uploads ID
     * @param {Array} videos an empty array
     * @returns {Promise<?videoDetails>}
     * @example
     */
    videosList(uploads_id: string, videos: [videoDetails]): Promise<[videoDetails]>;
    /**
     *
     * Get Video Details by ID
     * @param {string} video_id The Video ID
     * @returns {Promise<?videoDetails>}
     * @example
     */
    videoInfo(video_id: string): Promise<videoDetails>;
}
